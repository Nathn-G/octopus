- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: Importing GPG key
  become: true
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
    state: present

- name: Add PostgreSQL repository
  become: true
  apt_repository:
    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main'
    state: present

- name: Install packages
  become: true
  apt:
    state: present
    name:
      - python-pip
      - python-virtualenv
      - python-setuptools
      - python-psycopg2
      - postgresql-12
      - postgresql-client-12

- name: Install python librairy
  pip:
    name: psycopg2
    state: present

- name: Replace pg_hba.conf
  become: yes
  copy:
    src: "../files/pg_hba.conf"
    dest: "/etc/postgresql/12/main/"
    mode: 0777
  notify: restart-postgresql

- name: Replace redis.conf
  become: yes
  copy:
    src: "../files/postgresql.conf"
    dest: "/etc/postgresql/12/main/"
    mode: 0777
  notify: restart-postgresql

- name: Check if PostgreSQL database is initialized.
  become: true
  stat:
    path: "/var/lib/postgresql/12/main/PG_VERSION"
  register: postgres_data

- name: Ensure PostgreSQL database is initialized.
  command: "/usr/lib/postgresql/12/bin/initdb -D /etc/lib/postgresql/12/main/"
  when: not postgres_data.stat.exists
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true

- name: "Start and enable services"
  become: true
  service: 
    name: postgresql@12-main
    state: started
    enabled: yes

- name: Flush handlers
  meta: flush_handlers

- name: Create postgresql db
  become: true
  postgresql_db:
    name: "{{ postgresql_db_name }}"
    port: "{{ postgresql_db_port }}"
    login_user: postgres

- name: Copy schema.sql
  become: yes
  copy:
    src: "../files/schema.sql"
    dest: "/tmp/"
    mode: 0777
  notify: execute-schema-sql

- name: Flush handlers
  meta: flush_handlers

- name: Create user
  postgresql_user:
    name: "{{ postgresql_user_name }}"
    db: "{{ postgresql_db_name }}"
    password: "{{ postgresql_user_password }}"
    role_attr_flags: NOSUPERUSER
    priv: "CONNECT/votes:SELECT,INSERT,UPDATE"
